program sample;
{ ------------------------------------------------------------ }
const
PI = 3.1415926;
RST = False;
MSG = 'GOOD NIGHT.';
{ type暂时没有实现 }
var
tcase, a, b: Int;
c: Char = 'a';
bl: Bool = True;
{ 我们的程序中string必须初始化 }
s: String = 'Hello';	{ only support single quote }
array1: array[5] of char;
array2: array[2] of int;
{ 数组暂时不支持初始化和动态下标 }
{str: array[-1..1] of char = ('s', 't', 'r');}
{ ------------------------------ }
function gcd(a: Int; b: Int): Int;	{ header }
{ local declaration }
function my_mod(a: Int; b: Int): Int;
begin
	array2[9] := 1++2;
	my_mod := a % b
end;
{ local declaration end }
begin
	if b = 0 then
		gcd := a	{ * no semicolon }
	else
		gcd := gcd(b, my_mod(a, b))	{ gcd can be both return value or function name }
end;
{ ------------------------------ }
BEGIN 
a := Int(c) + Int(num);

if (a <> 0) then	{ = <> > < >= <= }
	begin
		if True and bl then	{ or not }
		begin
			a := 1;
			a := not a;
			WriteLn('hi')
		end	{ no semicolon }
		else if True then
			WriteLn('hi')
	end;

a := 0;
repeat
    a := a + 1;
    a := a + 1
until a >= 5;

for a := 0 to 3 do
	WriteLn('a = ', a);

case a of
		1: WriteLn('1');
		3: WriteLn('2')
	{ else                  }   { 丐版case不支持else }
	{ 	WriteLn('msg0', a); }
	{	WriteLn('msg1', a)  }
	end;

Read(tcase);	{ Readln(...) }
while tcase > 0 do
begin
	tcase := tcase - 1;
	Read(a, b);
	Writeln(gcd(a, b))	{ Write(...) }
end;

array2[1] := array1[0];
i := true and not(5.0*(1--4)+2.1 and 123) ;
i := my_mod(a, b) + -5
end.