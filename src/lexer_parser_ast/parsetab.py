
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocLTGTLEQGEQleft+-left*/%rightUMINUSAND ARRAY ASSIN BEGIN BOOL BREAK CAHR CASE COMMENT CONST CONTINUE DO ELSE END EQ EXIT FOR FUNCTION GEQ GOTO GT ID IF INT LEQ LITERAL_CHAR LITERAL_INT LITERAL_REAL LITERAL_STRING LT NEQ NOT OF OR PROCEDURE PROGRAM RANGE REAL RECORD REPEAT STRING THEN TO TYPE UNTIL VAR WHILEexp : exp '+' exp\n           | exp '-' exp\n           | exp '*' exp\n           | exp '/' exp\n           | exp '%' exp\n           | '(' exp ')'\n           | LITERAL_INT\n           | LITERAL_REALexp : '-' exp %prec UMINUS"
    
_lr_action_items = {'(':([0,2,3,6,7,8,9,10,],[3,3,3,3,3,3,3,3,]),'LITERAL_INT':([0,2,3,6,7,8,9,10,],[4,4,4,4,4,4,4,4,]),'LITERAL_REAL':([0,2,3,6,7,8,9,10,],[5,5,5,5,5,5,5,5,]),'-':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,],[2,7,2,2,-7,-8,2,2,2,2,2,-9,7,-1,-2,-3,-4,-5,-6,]),'$end':([1,4,5,11,13,14,15,16,17,18,],[0,-7,-8,-9,-1,-2,-3,-4,-5,-6,]),'+':([1,4,5,11,12,13,14,15,16,17,18,],[6,-7,-8,-9,6,-1,-2,-3,-4,-5,-6,]),'*':([1,4,5,11,12,13,14,15,16,17,18,],[8,-7,-8,-9,8,8,8,-3,-4,-5,-6,]),'/':([1,4,5,11,12,13,14,15,16,17,18,],[9,-7,-8,-9,9,9,9,-3,-4,-5,-6,]),'%':([1,4,5,11,12,13,14,15,16,17,18,],[10,-7,-8,-9,10,10,10,-3,-4,-5,-6,]),')':([4,5,11,12,13,14,15,16,17,18,],[-7,-8,-9,18,-1,-2,-3,-4,-5,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exp':([0,2,3,6,7,8,9,10,],[1,11,12,13,14,15,16,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> exp + exp','exp',3,'p_exp','yacc_calc.py',12),
  ('exp -> exp - exp','exp',3,'p_exp','yacc_calc.py',13),
  ('exp -> exp * exp','exp',3,'p_exp','yacc_calc.py',14),
  ('exp -> exp / exp','exp',3,'p_exp','yacc_calc.py',15),
  ('exp -> exp % exp','exp',3,'p_exp','yacc_calc.py',16),
  ('exp -> ( exp )','exp',3,'p_exp','yacc_calc.py',17),
  ('exp -> LITERAL_INT','exp',1,'p_exp','yacc_calc.py',18),
  ('exp -> LITERAL_REAL','exp',1,'p_exp','yacc_calc.py',19),
  ('exp -> - exp','exp',2,'p_exp_uminus','yacc_calc.py',36),
]
