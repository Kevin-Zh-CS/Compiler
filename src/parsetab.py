
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftORleftANDnonassocEQNEQnonassocLTGTLEQGEQleft+-left*/%rightUMINUSNOTAND ARRAY ASSIN BEGIN BOOL BREAK CASE CHAR COMMENT CONST CONTINUE DO ELSE END EQ EXIT FOR FUNCTION GEQ GOTO GT ID IF INT LEQ LITERAL_BOOL LITERAL_CHAR LITERAL_INT LITERAL_REAL LITERAL_STRING LT NEQ NOT OF OR PROCEDURE PROGRAM RANGE REAL RECORD REPEAT STRING THEN TO TYPE UNTIL VAR WHILEprogram : head_block decl_block main_block\n        head_block : PROGRAM ID ';'\n        decl_block : const_part type_part\n        const_part : CONST const_exp_list\n                    | empty\n        const_exp_list : const_exp const_exp_list\n                        | const_exp\n        const_exp : ID EQ exp ';'\n        type_part : TYPE type_decl_list\n                    | empty\n        type_decl_list : type_decl type_decl_list\n                        | type_decl\n        type_decl : ID EQ type_def ';'\n        type_def : sys_type_def\n                    | enum_type_def\n        sys_type_def : INT\n                        | REAL\n                        | BOOL\n                        | CHAR\n                        | STRING\n                        | ID\n        enum_type_def : '(' enum_elem_list ')'\n        enum_elem_list : enum_elem ',' enum_elem_list\n                        | enum_elem\n        enum_elem : ID\n        \n        \n        main_block : BEGIN exp END '.'\n        exp : exp '+' exp\n            | exp '-' exp\n            | exp '*' exp\n            | exp '/' exp\n            | exp '%' exp\n            | '(' exp ')'\n            | relat_exp\n            | LITERAL_INT\n            | LITERAL_REAL\n            | LITERAL_BOOL\n            | LITERAL_CHAR\n            | LITERAL_STRING\n            relat_exp : exp EQ exp\n                    | exp NEQ exp\n                    | exp LT exp\n                    | exp GT exp\n                    | exp LEQ exp\n                    | exp GEQ exp\n                    | exp AND exp\n                    | exp OR exp\n                    | NOT exp\n        exp : '-' exp %prec UMINUSempty :"
    
_lr_action_items = {'PROGRAM':([0,],[3,]),'$end':([1,9,53,],[0,-1,-26,]),'CONST':([2,17,],[6,-2,]),'TYPE':([2,5,7,14,15,17,31,78,],[-49,12,-5,-4,-7,-2,-6,-8,]),'BEGIN':([2,4,5,7,11,13,14,15,17,28,29,31,50,78,79,],[-49,10,-49,-5,-3,-10,-4,-7,-2,-9,-12,-6,-11,-8,-13,]),'ID':([3,6,12,15,29,51,77,78,79,84,],[8,16,30,16,30,68,82,-8,-13,82,]),';':([8,21,22,23,24,25,26,47,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,83,],[17,-33,-34,-35,-36,-37,-38,-48,-47,78,-27,-28,-29,-30,-31,-39,-40,-41,-42,-43,-44,-45,-46,-32,-21,79,-14,-15,-16,-17,-18,-19,-20,-22,]),'(':([10,19,20,27,32,34,35,36,37,38,39,40,41,42,43,44,45,46,51,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,77,]),'LITERAL_INT':([10,19,20,27,32,34,35,36,37,38,39,40,41,42,43,44,45,46,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'LITERAL_REAL':([10,19,20,27,32,34,35,36,37,38,39,40,41,42,43,44,45,46,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'LITERAL_BOOL':([10,19,20,27,32,34,35,36,37,38,39,40,41,42,43,44,45,46,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'LITERAL_CHAR':([10,19,20,27,32,34,35,36,37,38,39,40,41,42,43,44,45,46,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'LITERAL_STRING':([10,19,20,27,32,34,35,36,37,38,39,40,41,42,43,44,45,46,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'-':([10,18,19,20,21,22,23,24,25,26,27,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[19,35,19,19,-33,-34,-35,-36,-37,-38,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-48,35,-47,35,-27,-28,-29,-30,-31,35,35,35,35,35,35,35,35,-32,]),'NOT':([10,19,20,27,32,34,35,36,37,38,39,40,41,42,43,44,45,46,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'EQ':([16,18,21,22,23,24,25,26,30,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[32,39,-33,-34,-35,-36,-37,-38,51,-48,39,-47,39,-27,-28,-29,-30,-31,None,None,-41,-42,-43,-44,39,39,-32,]),'END':([18,21,22,23,24,25,26,47,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[33,-33,-34,-35,-36,-37,-38,-48,-47,-27,-28,-29,-30,-31,-39,-40,-41,-42,-43,-44,-45,-46,-32,]),'+':([18,21,22,23,24,25,26,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[34,-33,-34,-35,-36,-37,-38,-48,34,-47,34,-27,-28,-29,-30,-31,34,34,34,34,34,34,34,34,-32,]),'*':([18,21,22,23,24,25,26,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[36,-33,-34,-35,-36,-37,-38,-48,36,-47,36,36,36,-29,-30,-31,36,36,36,36,36,36,36,36,-32,]),'/':([18,21,22,23,24,25,26,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[37,-33,-34,-35,-36,-37,-38,-48,37,-47,37,37,37,-29,-30,-31,37,37,37,37,37,37,37,37,-32,]),'%':([18,21,22,23,24,25,26,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[38,-33,-34,-35,-36,-37,-38,-48,38,-47,38,38,38,-29,-30,-31,38,38,38,38,38,38,38,38,-32,]),'NEQ':([18,21,22,23,24,25,26,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[40,-33,-34,-35,-36,-37,-38,-48,40,-47,40,-27,-28,-29,-30,-31,None,None,-41,-42,-43,-44,40,40,-32,]),'LT':([18,21,22,23,24,25,26,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[41,-33,-34,-35,-36,-37,-38,-48,41,-47,41,-27,-28,-29,-30,-31,41,41,None,None,None,None,41,41,-32,]),'GT':([18,21,22,23,24,25,26,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[42,-33,-34,-35,-36,-37,-38,-48,42,-47,42,-27,-28,-29,-30,-31,42,42,None,None,None,None,42,42,-32,]),'LEQ':([18,21,22,23,24,25,26,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[43,-33,-34,-35,-36,-37,-38,-48,43,-47,43,-27,-28,-29,-30,-31,43,43,None,None,None,None,43,43,-32,]),'GEQ':([18,21,22,23,24,25,26,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[44,-33,-34,-35,-36,-37,-38,-48,44,-47,44,-27,-28,-29,-30,-31,44,44,None,None,None,None,44,44,-32,]),'AND':([18,21,22,23,24,25,26,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[45,-33,-34,-35,-36,-37,-38,-48,45,-47,45,-27,-28,-29,-30,-31,-39,-40,-41,-42,-43,-44,-45,45,-32,]),'OR':([18,21,22,23,24,25,26,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,],[46,-33,-34,-35,-36,-37,-38,-48,46,-47,46,-27,-28,-29,-30,-31,-39,-40,-41,-42,-43,-44,-45,-46,-32,]),')':([21,22,23,24,25,26,47,48,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,80,81,82,85,],[-33,-34,-35,-36,-37,-38,-48,67,-47,-27,-28,-29,-30,-31,-39,-40,-41,-42,-43,-44,-45,-46,-32,83,-24,-25,-23,]),'.':([33,],[53,]),'INT':([51,],[72,]),'REAL':([51,],[73,]),'BOOL':([51,],[74,]),'CHAR':([51,],[75,]),'STRING':([51,],[76,]),',':([81,82,],[84,-25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'head_block':([0,],[2,]),'decl_block':([2,],[4,]),'const_part':([2,],[5,]),'empty':([2,5,],[7,13,]),'main_block':([4,],[9,]),'type_part':([5,],[11,]),'const_exp_list':([6,15,],[14,31,]),'const_exp':([6,15,],[15,15,]),'exp':([10,19,20,27,32,34,35,36,37,38,39,40,41,42,43,44,45,46,],[18,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,]),'relat_exp':([10,19,20,27,32,34,35,36,37,38,39,40,41,42,43,44,45,46,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'type_decl_list':([12,29,],[28,50,]),'type_decl':([12,29,],[29,29,]),'type_def':([51,],[69,]),'sys_type_def':([51,],[70,]),'enum_type_def':([51,],[71,]),'enum_elem_list':([77,84,],[80,85,]),'enum_elem':([77,84,],[81,81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> head_block decl_block main_block','program',3,'p_program','yacc.py',27),
  ('head_block -> PROGRAM ID ;','head_block',3,'p_head_block','yacc.py',32),
  ('decl_block -> const_part type_part','decl_block',2,'p_decl_block','yacc.py',37),
  ('const_part -> CONST const_exp_list','const_part',2,'p_const_part','yacc.py',44),
  ('const_part -> empty','const_part',1,'p_const_part','yacc.py',45),
  ('const_exp_list -> const_exp const_exp_list','const_exp_list',2,'p_const_exp_list','yacc.py',53),
  ('const_exp_list -> const_exp','const_exp_list',1,'p_const_exp_list','yacc.py',54),
  ('const_exp -> ID EQ exp ;','const_exp',4,'p_const_exp','yacc.py',62),
  ('type_part -> TYPE type_decl_list','type_part',2,'p_type_part','yacc.py',67),
  ('type_part -> empty','type_part',1,'p_type_part','yacc.py',68),
  ('type_decl_list -> type_decl type_decl_list','type_decl_list',2,'p_type_decl_list','yacc.py',76),
  ('type_decl_list -> type_decl','type_decl_list',1,'p_type_decl_list','yacc.py',77),
  ('type_decl -> ID EQ type_def ;','type_decl',4,'p_type_decl','yacc.py',85),
  ('type_def -> sys_type_def','type_def',1,'p_type_def','yacc.py',90),
  ('type_def -> enum_type_def','type_def',1,'p_type_def','yacc.py',91),
  ('sys_type_def -> INT','sys_type_def',1,'p_sys_type_def','yacc.py',98),
  ('sys_type_def -> REAL','sys_type_def',1,'p_sys_type_def','yacc.py',99),
  ('sys_type_def -> BOOL','sys_type_def',1,'p_sys_type_def','yacc.py',100),
  ('sys_type_def -> CHAR','sys_type_def',1,'p_sys_type_def','yacc.py',101),
  ('sys_type_def -> STRING','sys_type_def',1,'p_sys_type_def','yacc.py',102),
  ('sys_type_def -> ID','sys_type_def',1,'p_sys_type_def','yacc.py',103),
  ('enum_type_def -> ( enum_elem_list )','enum_type_def',3,'p_enum_type_def','yacc.py',109),
  ('enum_elem_list -> enum_elem , enum_elem_list','enum_elem_list',3,'p_enum_elem_list','yacc.py',115),
  ('enum_elem_list -> enum_elem','enum_elem_list',1,'p_enum_elem_list','yacc.py',116),
  ('enum_elem -> ID','enum_elem',1,'p_enum_elem','yacc.py',124),
  ('main_block -> BEGIN exp END .','main_block',4,'p_main_block','yacc.py',137),
  ('exp -> exp + exp','exp',3,'p_exp','yacc.py',142),
  ('exp -> exp - exp','exp',3,'p_exp','yacc.py',143),
  ('exp -> exp * exp','exp',3,'p_exp','yacc.py',144),
  ('exp -> exp / exp','exp',3,'p_exp','yacc.py',145),
  ('exp -> exp % exp','exp',3,'p_exp','yacc.py',146),
  ('exp -> ( exp )','exp',3,'p_exp','yacc.py',147),
  ('exp -> relat_exp','exp',1,'p_exp','yacc.py',148),
  ('exp -> LITERAL_INT','exp',1,'p_exp','yacc.py',149),
  ('exp -> LITERAL_REAL','exp',1,'p_exp','yacc.py',150),
  ('exp -> LITERAL_BOOL','exp',1,'p_exp','yacc.py',151),
  ('exp -> LITERAL_CHAR','exp',1,'p_exp','yacc.py',152),
  ('exp -> LITERAL_STRING','exp',1,'p_exp','yacc.py',153),
  ('relat_exp -> exp EQ exp','relat_exp',3,'p_relat_exp','yacc.py',166),
  ('relat_exp -> exp NEQ exp','relat_exp',3,'p_relat_exp','yacc.py',167),
  ('relat_exp -> exp LT exp','relat_exp',3,'p_relat_exp','yacc.py',168),
  ('relat_exp -> exp GT exp','relat_exp',3,'p_relat_exp','yacc.py',169),
  ('relat_exp -> exp LEQ exp','relat_exp',3,'p_relat_exp','yacc.py',170),
  ('relat_exp -> exp GEQ exp','relat_exp',3,'p_relat_exp','yacc.py',171),
  ('relat_exp -> exp AND exp','relat_exp',3,'p_relat_exp','yacc.py',172),
  ('relat_exp -> exp OR exp','relat_exp',3,'p_relat_exp','yacc.py',173),
  ('relat_exp -> NOT exp','relat_exp',2,'p_relat_exp','yacc.py',174),
  ('exp -> - exp','exp',2,'p_exp_uminus','yacc.py',197),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',202),
]
